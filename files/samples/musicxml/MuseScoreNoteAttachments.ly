\version "2.19.83"

% Generated by xml2ly 0.93 from "basic/MuseScoreNoteAttachments.xml"
% on Thursday 2020-03-12 @ 11:02:29 CET

% The translation command line was:
%   xml2ly '-xi' '-aofn' '-dmsr' '-dpg' '--dlpsr' '-abn' '-lpcd' '-rbracks' '-mssp' '1cm' '-loop' 'basic/MuseScoreNoteAttachments.xml'
% or, with long option names:
%  xml2ly basic/MuseScoreNoteAttachments.xml -xml2ly-infos -auto-output-file-name -display-msr -display-partgroups -display-lpsr -all-bar-numbers -lilypond-compile-date -repeat-brackets -markup-system-spacing.padding '1 cm' -loop-to-musicxml
% or, with short option names:
%   xml2ly basic/MuseScoreNoteAttachments.xml -xi -aofn -dmsr -dpg -dlpsr -abn -lpcd -rbracks -mssp '1 cm' -loop

% Comment or adapt next line as needed (default is 20)
#(set-global-staff-size 20)


% Scheme function(s): "after"
% A function to create events after given music.
% Thanks to David Kastrup for the inspiration!

after =
#(define-music-function (t e m) (ly:duration? ly:music? ly:music?)
   #{
     \context Bottom <<
       #m
       { \skip $t <> -\tweak extra-spacing-width #empty-interval $e }
     >>
   #})



% Scheme function(s): "date & time"
% A set of functions to obtain a source file's modification time.

#(define comml           (object->string (command-line)))
#(define loc             (+ (string-rindex comml #\space ) 2))
#(define commllen        (- (string-length comml) 2))
#(define filen           (substring comml loc commllen))
#(define siz             (object->string (stat:size (stat filen))))
#(define ver             (object->string (lilypond-version)))
#(define dat             (strftime "%d/%m/%Y" (localtime (current-time))))
#(define tim             (strftime "%H:%M:%S" (localtime (current-time))))
#(define modTime         (stat:mtime (stat filen)))
#(define modTimeAsString (strftime "%d/%m/%Y - %H:%M:%S" (localtime modTime)))



% Scheme function(s): "otherDynamic"
% \\otherDynamic to handle any string as dynamics.

#(use-modules (ice-9 regex))

otherDynamic =
#(define-event-function (parser location text) (markup?)
   (if (string? text)
       (let* ((underscores-replaced
               (string-map
                (lambda (x) (if (eq? x #\_) #\space x))
                text))
              (split-text (string-split underscores-replaced #\space))
              (formatted (map
                          (lambda (word)
                            (if (string-match "^[mrzfps]*$" word)
                                (markup #:dynamic word)
                                (markup #:normal-text #:italic word)))
                          split-text)))
         #{
           #(make-dynamic-script (make-line-markup formatted))
         #})
       ;; user provided a full-blown markup, so we don't mess with it:
       #{
         #(make-dynamic-script (markup #:normal-text text))
       #}))



% Scheme function(s): "tongue"
% Creates multiple tongue technicals, argument is a number.
% Example: 'c4 -\tongue #3' creates a triple tongue.

tongue =
#(define-music-function (parser location dots) (integer?)
   (let ((script (make-music 'ArticulationEvent
                   'articulation-type "staccato")))
     (set! (ly:music-property script 'tweaks)
           (acons 'stencil
             (lambda (grob)
               (let ((stil (ly:script-interface::print grob)))
                 (let loop ((count (1- dots)) (new-stil stil))
                   (if (> count 0)
                       (loop (1- count)
                         (ly:stencil-combine-at-edge new-stil X RIGHT stil 0.2))
                       (ly:stencil-aligned-to new-stil X CENTER)))))
             (ly:music-property script 'tweaks)))
     script))


\header {
  title              = "MusicXML notations (attached to a note)"
  subtitle           = ""
}

\paper {
  paper-height                   = 297\mm
  paper-width                    = 210\mm
  
  %left-margin                    = 0.0\mm
  %right-margin                   = 0.0\mm
  %top-margin                     = 0.0\mm
  %bottom-margin                  = 0.0\mm
  
  %horizontal-shift               = 0.0\mm
  %indent                         = 0.0\mm
  %short-indent                   = 0.0\mm
  
  markup-system-spacing.padding  = 1\cm
  %between-system-space           = 0.0\mm
  %page-top-space                 = 0.0\mm
  
  %page-count                     = -1
  %system-count                   = -1
  
  oddHeaderMarkup                = \markup {
    \fill-line {
      \on-the-fly \not-first-page {
        \fromproperty #'page:page-number-string
        " "
        \fromproperty #'header:title
        " "
        \fromproperty #'header:subtitle
      }
    }
  }

  evenHeaderMarkup               = \markup {
    \fill-line {
      \on-the-fly \not-first-page {
        \fromproperty #'page:page-number-string
        " "
        \fromproperty #'header:title
        " "
        \fromproperty #'header:subtitle
      }
    }
  }

  oddFooterMarkup                = \markup {
    \tiny
    \column {
      \fill-line {
        #(string-append
"Music generated from MusicXML by xml2ly 0.93 and engraved by LilyPond " (lilypond-version))
      }
      \fill-line { \italic { \modTimeAsString }}
    }
  }

  evenFooterMarkup               = ""
}

\layout {
  \context {
    \Score
    autoBeaming = ##f % to display tuplets brackets
  }
  \context {
    \Voice
  }
  \context {
    \Score
    % defaultBarType = #"!"
    startRepeatType = #"[|:"
    endRepeatType = #":|]"
    doubleRepeatType = #":|][|:"
  }
}

% Pick your choice from the next two lines as needed
myBreak = { \break }
%myBreak = { }

% Pick your choice from the next two lines as needed
myPageBreak = { \pageBreak }
%myPageBreak = { }

Part_POne_Staff_One_Voice_One = \absolute {
  \language "nederlands"
  \set Score.barNumberVisibility = #all-bar-numbers-visible
  \override Score.BarNumber.break-visibility = ##(#f #t #t)
  
  \key c \major
  
  \clef "treble"
  c''4 \fermata c'' \fermata c'' \shortfermata c'' \longfermata | % 2
  \barNumberCheck #2
  c''4 _\fermata
  \arpeggioNormal <c'' e'' g'' > -\arpeggio
  \arpeggioBracket %{\kNonArpeggiatoTypeBottom???%}
  <c'' e'' g'' > -\arpeggio c'' \bar "||"
  \bar ".|:" | % 3
  \barNumberCheck #3
  c''4 -> c'' -^ c'' -. c'' -- | % 4
  \barNumberCheck #4
  c''4 -_ c'' -! c'' %{spiccato???%} c'' %{scoop???%} | % 5
  \barNumberCheck #5
  c''4 %{plop???%} c'' -\bendAfter #+4 c'' -\bendAfter #-4 c'' \breathe | % 6
  \barNumberCheck #6
  c''4
  \override BreathingSign.text = \markup {\musicglyph #"scripts.caesura.curved"}
  \breathe
   c'' %{stress???%} c'' %{unstress???%} r%{2%} \bar "||"
  \bar ".|:" | % 7
  \barNumberCheck #7
  c''4 \trill c'' \turn c''4*1/2 s%{16%}4*1/2\turn c''4 \reverseturn | % 8
  \barNumberCheck #8
  c''4 %{\shake???%} \once \override TextSpanner.style = #'trill
  \textSpannerDown c'' \startTextSpan
  \startTextSpan
  \once \override TextSpanner.style = #'trill
  c'' \stopTextSpan \startTextSpan
  \stopTextSpan \startTextSpan
  c'' \stopTextSpan \stopTextSpan | % 9
  \barNumberCheck #9
  c''4 \mordent c'' \prall c'' %{\schleifer???%} c'' :8 | % 10
  \barNumberCheck #10
  c''4 \turn -c'' \turn ^^r%{2%}2 \bar "||"
  \bar ".|:" | % 11
  \barNumberCheck #11
  c''4 \upbow c'' \downbow c'' \flageolet c'' \flageolet | % 12
  \barNumberCheck #12
  c''4 \flageolet c'' \flageolet c'' \flageolet c'' \flageolet | % 13
  \barNumberCheck #13
  c''4 \open c'' \thumb c'' - 0 c'' - 1 | % 14
  \barNumberCheck #14
  c''4 - 2 c'' - 3 c'' - 4 c'' - 5 | % 15
  \barNumberCheck #15
  c''4 - 0 c'' - 5 - 3 - 2 c'' %{Pluck???%} c'' %{Pluck???%} -\markup {"a"} | % 16
  \barNumberCheck #16
  c''4 -\tongue #2 c'' -\tongue #3 c'' \stopped c'' \snappizzicato | % 17
  \barNumberCheck #17
  c''4  c''  c'' \0 c'' \5 | % 18
  \barNumberCheck #18
  \after 8 ^"H" c''4  c''  \after 8 ^"P" c''  c''  | % 19
  \barNumberCheck #19
  c''4 \bendAfter 4 c'' \bendAfter 3 c'' \bendAfter -0.5 c'' \bendAfter 3.5 | % 20
  \barNumberCheck #20
  c''4 %{\Tap???%} c'' %{\Tap???%} c'' \lheel c'' \ltoe | % 21
  \barNumberCheck #21
  c''4 %{\Fingernails???%} r%{2%} r%{2%}2 \bar "||"
  \bar ".|:" | % 22
  \barNumberCheck #22
  c''4 \f c'' \ppp c'' \sfp c'' -\otherDynamic "sfffz" | % 23
  \barNumberCheck #23
  g'4 ^^ ^. g' _> _- ^. r%{2%}2
  \bar "|."
  \bar ".|:" | % 24
  \barNumberCheck #24
}

Part_POne_Staff_One_Voice_One_Stanza_One = \lyricmode {
  \set associatedVoice = #"Part_POne_Staff_One_Voice_One"
  \set ignoreMelismata = ##t
"ferm."4 "normal ferm."4 "angled ferm."4 "square ferm."4 "inv.ferm."4 "arp."4 "non-arp."4 "acc.mark"4 "acc."4 "str.-acc."4 "stacc."4 "ten."4 "det.-leg."4 "stacc.ss"4 "spicc."4 scoop4 plop4 doit4 falloff4 breath4 "caes."4 stress4 "unstr."4 \skip4 "tr."4 turn4 "del.turn"4 "inv.turn"4 shake4 wavy4 -- \skip4 line4 "mord."4 "inv.mord."4 "schl."4 "trem."4 "turn+acc."4 "turn+acc.(ab.+bel./rel to turn)"4 \skip2 "up-b."4 "down-b."4 "harm."4 "nat.harm."4 "art.harm."4 "nat.h./base"4 "nat.h./touching"4 "nat.h./sounding"4 "open-str."4 "thumb-pos."4 "empty fing."4 "fing.1"4 "fing.2"4 "fing.3"4 "fing.4"4 "fing.5"4 "fing.sth."4 "mult.fing."4 "empty pluck"4 "pluck a"4 "dbl.tng."4 "trpl.tng."4 stopped4 "snp.pizz."4 "empty fret"4 "fret0"4 "empty str."4 "str. 5"4 hammer4 -- on4 pull4 -- off4 bend4 "b.3 with-bar"4 "pre-b. -0.5"4 "b. release 3.5"4 tap4 "tap T"4 heel4 toe4 "fingern."4 \skip4 \skip2 f4 ppp4 sfp4 "Oth.dyn."4 "both above"4 "ab./bel./bel."4 \skip2
}

\book {
  \header {
  }
  
  \score {
    <<
      
      \new Staff = "Part_POne_Staff_One"
      \with {
      }
      <<
        \context Voice = "Part_POne_Staff_One_Voice_One" <<
          \Part_POne_Staff_One_Voice_One
        >>
        \new Lyrics
          \with {
          }
          \Part_POne_Staff_One_Voice_One_Stanza_One
      >>
      
    >>
    
    \layout {
      \context {
        \Score
        autoBeaming = ##f % to display tuplets brackets
      }
      \context {
        \Voice
      }
      \context {
        \Score
        % defaultBarType = #"!"
        startRepeatType = #"[|:"
        endRepeatType = #":|]"
        doubleRepeatType = #":|][|:"
      }
    }
    
    \midi {
      \tempo 4 = 90
    }
  }
  
  \paper {
    paper-height                   = 297\mm
    paper-width                    = 210\mm
    
    %left-margin                    = 0.0\mm
    %right-margin                   = 0.0\mm
    %top-margin                     = 0.0\mm
    %bottom-margin                  = 0.0\mm
    
    %horizontal-shift               = 0.0\mm
    %indent                         = 0.0\mm
    %short-indent                   = 0.0\mm
    
    markup-system-spacing.padding  = 1\cm
    %between-system-space           = 0.0\mm
    %page-top-space                 = 0.0\mm
    
    %page-count                     = -1
    %system-count                   = -1
    
    oddHeaderMarkup                = \markup {
    \fill-line {
      \on-the-fly \not-first-page {
        \fromproperty #'page:page-number-string
        " "
        \fromproperty #'header:title
        " "
        \fromproperty #'header:subtitle
      }
    }
  }

    evenHeaderMarkup               = \markup {
    \fill-line {
      \on-the-fly \not-first-page {
        \fromproperty #'page:page-number-string
        " "
        \fromproperty #'header:title
        " "
        \fromproperty #'header:subtitle
      }
    }
  }

    oddFooterMarkup                = \markup {
    \tiny
    \column {
      \fill-line {
        #(string-append
"Music generated from MusicXML by xml2ly 0.93 and engraved by LilyPond " (lilypond-version))
      }
      \fill-line { \italic { \modTimeAsString }}
    }
  }

    evenFooterMarkup               = ""
  }
  
}

