.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.
.TH XML2LY "1" "October 2019" "xml2ly " "User Commands"
.SH NAME
xml2ly \- manual page for xml2ly
.SH DESCRIPTION
.IP
Welcome to xml2ly,
.IP
the MusicXML to LilyPond translator
.IP
delivered as part of the libmusicxml2 library.
.IP
https://github.com/grame\-cncm/libmusicxml/tree/lilypond
.SS "Usage:"
.IP
xml2ly [options] [MusicXMLFile|\-] [options]
.PP
xml2ly available options (\fB\-h\fR, \fB\-help\fR):
.IP
Option '\-h, \fB\-help\fR' prints the full help,
.IP
while '\-hs, \fB\-helpSummary\fR' only prints a help summary.
.IP
There are 8 options prefixes:
.IP
\&'\-delay\-rests=abc,yz' is equivalent to '\-delay\-rests\-abc, \fB\-delay\-rests\-yz\fR'
\&'\-dr=abc,yz' is equivalent to '\-drabc, \fB\-dryz\fR'
\&'\-h=abc,wxyz' is equivalent to '\-habc, \fB\-hwxyz\fR'
\&'\-help=abc,yz' is equivalent to '\-help\-abc, \fB\-help\-yz\fR'
\&'\-ignore\-redundant=abc,yz' is equivalent to '\-ignore\-redundant\-abc, \fB\-ignore\-redundant\-yz\fR'
\&'\-ir=abc,yz' is equivalent to '\-irabc, \fB\-iryz\fR'
\&'\-t=abc,wxyz' is equivalent to '\-tabc, \fB\-twxyz\fR'
\&'\-trace=abc,yz' is equivalent to '\-trace\-abc, \fB\-trace\-yz\fR'
.IP
There are 6 single\-character options:
.HP
\fB\-a\fR, \fB\-c\fR, \fB\-h\fR, \fB\-o\fR, \fB\-q\fR and \fB\-v\fR
.IP
They can be clustered, such as:
.IP
\&'\-vac'
.IP
which is equivalent to:
.IP
\&'\-v, \fB\-a\fR, \fB\-c\fR'
.IP
Some options needing a value can use a default value:
.IP
xml2ly supports two styles for this, see '\-ovs, \fB\-optional\-values\-style\fR' option.
.IP
xml2ly (\fB\-hxl\fR, \fB\-help\-xml2ly\fR):
.IP
Options that are used by xml2ly are grouped here.
.HP
\fB\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\fR
.TP
Version
(\fB\-hxv\fR, \fB\-help\-xml2ly\-version\fR):
.HP
\fB\-v\fR, \fB\-version\fR
.IP
Display xml2ly's version number and history.
.TP
About
(\fB\-hxa\fR, \fB\-help\-xml2ly\-about\fR):
.HP
\fB\-a\fR, \fB\-about\fR
.IP
Display information about xml2ly.
.TP
Contact
(\fB\-hxc\fR, \fB\-help\-xml2ly\-contact\fR):
.HP
\fB\-c\fR, \fB\-contact\fR
.IP
Display information about how to contacct xml2ly maintainers.
.TP
Output file
(\fB\-hxof\fR, \fB\-help\-xml2ly\-output\-file\fR):
.HP
\fB\-o\fR, \fB\-output\-file\-name\fR FILENAME
.IP
Write LilyPond code to file FILENAME instead of standard output.
.HP
\fB\-aofn\fR, \fB\-auto\-output\-file\-name\fR
.IP
This option can only be used when reading from a file.
Write LilyPond code to a file in the current working directory.
The file name is derived from that of the input file,
replacing any suffix after the the '.' by 'ly'
or adding '.ly' if none is present.
.IP
Trace (\fB\-ht\fR, \fB\-help\-trace\fR) (hidden by default)
\fB\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\fR
.IP
Options and help (\fB\-hoah\fR, \fB\-help\-options\-and\-help\fR):
\fB\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\fR
.TP
Options help
(\fB\-hoh\fR, \fB\-help\-options\-help\fR):
.HP
\fB\-ho\fR, \fB\-help\-options\fR
.IP
Print options usage help.
.HP
\fB\-hs\fR, \fB\-help\-summary\fR
.IP
Display a help summary and exit.
.HP
\fB\-onh\fR, \fB\-option\-name\-help\fR [OPTION_NAME]
.IP
Print help about OPTION_NAME.
OPTION_NAME is optional, and the default value is 'onh'.
.HP
\fB\-dov\fR, \fB\-display\-options\-values\fR
.IP
Write the chosen options values to standard error.
This option is best placed early in the command line
.HP
\fB\-doh\fR, \fB\-display\-options\-handler\fR
.IP
Write the contents of the options handler to standard error.
.TP
Options and arguments
(\fB\-oaa\fR, \fB\-options\-and\-arguments\fR):
.HP
\fB\-soaa\fR, \fB\-show\-options\-and\-arguments\fR
.IP
Print the options and arguments to xml2ly.
.HP
\fB\-ovs\fR, \fB\-optional\-values\-style\fR STYLE
.IP
The 2 OAH optional values STYLEs available are:
gnu and oah.
The default is 'gnu'.
In GNU style:
.IP
\- the options name alone used the default value;
\- another value can be supplied with '=VALUE' right after the option name,
.IP
without any space in\-between.
.IP
InOAH style:
.IP
\- the option name followed by another option or that is the last one
.IP
in the command line uses the default value;
.IP
\- otherwise, the following argument supplies the option value.
.TP
Options visitors trace
(\fB\-htov\fR, \fB\-help\-trace\-options\-visitors\fR):
.HP
\fB\-toahv\fR, \fB\-trace\-oah\-visitors\fR
.IP
Write a trace of the OAH tree visiting activity to standard error.
.IP
General (\fB\-hg\fR, \fB\-help\-general\fR):
\fB\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\fR
.TP
Warnings and errors
(\fB\-hwae\fR, \fB\-help\-warnings\-and\-errors\fR):
.HP
\fB\-q\fR, \fB\-quiet\fR
.IP
Don't issue any warning or error messages.
.HP
\fB\-dse\fR, \fB\-dont\-show\-errors\fR
.IP
Don't show errors in the log.
.HP
\fB\-daoe\fR, \fB\-dont\-abort\-on\-errors\fR
.IP
Do not abort execution on errors and go ahead.
This may be useful when debugging xml2ly.
.HP
\fB\-dscp\fR, \fB\-display\-source\-code\-position\fR
.IP
Display the source code file name and line number
in warning and error messages.
This is useful when debugging xml2ly.
.TP
CPU usage
(\fB\-hgcpu\fR, \fB\-help\-general\-cpu\-usage\fR):
.HP
\fB\-dcpuu\fR, \fB\-display\-cpu\-usage\fR
.IP
Write information about CPU usage to standard error.
.IP
MusicXML (\fB\-hmxml\fR, \fB\-help\-musicxml\fR):
.IP
These options control the way MusicXML data is translated.
.HP
\fB\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\fR
.TP
Trace
(\fB\-hmxmlt\fR, \fB\-help\-musicxml\-trace\fR):
.HP
\fB\-t\fR<SHORT_NAME>, \fB\-trace\fR<LONG_NAME>
.IP
Trace SHORT_NAME/LONG_NAME when analyzing MusicXML data.
The 4 known SHORT_NAMEs are:
.IP
enc, divs, backup and forward.
.IP
The 4 known LONG_NAMEs are:
.IP
\fB\-encoding\fR, \fB\-divisions\fR, \fB\-backup\fR and \fB\-forward\fR.
.HP
\fB\-tmxmltv\fR, \fB\-trace\-musicxml\-tree\-visitors\fR
.IP
Write a trace of the MusicXML tree visiting activity to standard error.
.TP
Work
(\fB\-hmxmlw\fR, \fB\-help\-musicxml\-work\fR):
.HP
\fB\-ufawt\fR, \fB\-use\-filename\-as\-work\-title\fR
.IP
Use the file name as work title if there is none in the MusicXML data.
Standard input (\-) becomes 'Standard input' in that case.
.TP
Clefs, keys, times
(\fB\-hmxmlckt\fR, \fB\-help\-musicxml\-clefs\-keys\-times\fR):
.HP
\fB\-ir\fR<ELEMENTS>, \fB\-ignore\-redundant\fR<ELEMENTS>
.IP
Ignore ELEMENTS that are the same as the current one.
The 3 known ELEMENTSs are:
.IP
clefs, keys and times.
.TP
Combined options
(\fB\-hmxmlco\fR, \fB\-help\-musicxml\-combined\-options\fR):
.HP
\fB\-cubase\fR
.IP
Useful settings for MusicXML data exported from Cubase.
This option is set by default, and can be unset by 'noCubase'.
This combined option is equivalent to:
.IP
\fB\-irclefs\fR, \fB\-ignore\-redundant\-clefs\fR
\fB\-irkeys\fR, \fB\-ignore\-redundant\-keys\fR
\fB\-irtimes\fR, \fB\-ignore\-redundant\-times\fR
.HP
\fB\-no\-cubase\fR
.IP
Prevents the default 'cubase' option.
.IP
MSR (\fB\-hmsr\fR, \fB\-help\-msr\fR):
.IP
These options control the way MSR data is handled.
.HP
\fB\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\fR
.TP
Trace
(\fB\-hmsrt\fR, \fB\-help\-msr\-trace\fR):
.HP
\fB\-tmsr\fR, \fB\-trace\-msr\fR
.IP
Write a trace of the LPSR graphs visiting activity to standard error.
.HP
\fB\-tmsrv\fR, \fB\-trace\-msr\-visitors\fR
.IP
Write a trace of the MSR graphs visiting activity to standard error.
.TP
Display
(\fB\-hmsrtd\fR, \fB\-help\-msr\-trace\-and\-display\fR):
.HP
\fB\-dpg\fR, \fB\-display\-partgroups\fR
.IP
Write the structure of the part groups to standard error.
.HP
\fB\-dmsr\fR, \fB\-display\-msr\fR
.IP
Write the contents of the MSR data to standard error.
.HP
\fB\-dmsrd\fR, \fB\-display\-msr\-details\fR
.IP
Write the contents of the MSR data with more details to standard error.
.HP
\fB\-dmnames\fR, \fB\-display\-msr\-names\fR
.IP
Only write a view of the names in the MSR to standard error.
This implies that no LilyPond code is generated.
.HP
\fB\-dmsum\fR, \fB\-display\-msr\-summary\fR
.IP
Only write a summary of the MSR to standard error.
This implies that no LilyPond code is generated.
.TP
Languages
(\fB\-hmsrlang\fR, \fB\-help\-msr\-languages\fR):
.HP
\fB\-mplang\fR, \fB\-msr\-pitches\-language\fR LANGUAGE
.IP
Use LANGUAGE to display note pitches in the MSR logs and text views.
The 12 LilyPond pitches languages available are:
catalan, deutsch, english, espanol, francais, italiano, nederlands.
The default is 'nederlands'.
.TP
Parts
(\fB\-hmsrp\fR, \fB\-help\-msr\-parts\fR):
.HP
\fB\-mrp\fR, \fB\-msr\-rename\-part\fR PART_RENAME_SPEC
.IP
Rename part ORIGINAL_NAME to NEW_NAME, for example after displaying
the names in the score or a summary of the latter in a first run with options
\&'\-dmnames, \fB\-display\-msr\-names\fR' or 'dmsum, \fB\-display\-msr\-summary\fR'.
PART_RENAME_SPEC can be:
\&'ORIGINAL_NAME = NEW_NAME'
or
"ORIGINAL_NAME = NEW_NAME"
The single or double quotes are used to allow spaces in the names
and around the '=' sign, otherwise they can be dispensed with.
Using double quotes allows for shell variables substitutions, as in:
DESSUS="Cor anglais"
xml2ly \fB\-msr\-rename\-part\fR "P1 = ${DESSUS}" .
There can be several occurrences of this option.
.HP
\fB\-mtp\fR, \fB\-msr\-transpose\-part\fR PART_TRANSPOSITION_SPEC
.IP
Transpose part ORIGINAL_NAME using TRANSPOSITION to tranpose in the MSR data.
PART_TRANSPOSITION_SPEC can be:
\&'ORIGINAL_NAME = TRANSPOSITION'
or
"ORIGINAL_NAME = TRANSPOSITION"
The single or double quotes are used to allow spaces in the names
and around the '=' sign, otherwise they can be dispensed with.
TRANSPOSITION should contain a diatonic pitch, followed if needed
by a sequence of ',' or '\e'' octave indications.
Such indications cannot be mixed, and they are relative to c\e', i.e. middle C.
For example, 'a', 'f' and 'bes,' can be used respectively
for instruments in 'a', 'f' and B flat respectively.
Using double quotes allows for shell variables substitutions, as in:
SAXOPHONE="bes,"
EXECUTABLE \fB\-msr\-transpose\-part\fR "P1 ${SAXOPHONE}" .
There can be several occurrences of this option.
.HP
\fB\-mop\fR, \fB\-msr\-omit\-part\fR PART_NAME
.IP
Omit part PART_NAME.
There can be several occurrences of this option.
All the parts not omitted are kept.
This option is incompatible with '\-mkp, \fB\-msr\-keep\-part\fR'.
.HP
\fB\-mkp\fR, \fB\-msr\-keep\-part\fR PART_NAME
.IP
Keep part PART_NAME.
There can be several occurrences of this option.
All the parts not kept are omitted.
This option is incompatible with '\-mop, \fB\-msr\-omit\-part\fR'.
.TP
Staves
(\fB\-hmsrs\fR, \fB\-help\-msr\-staves\fR):
.HP
\fB\-cslsar\fR, \fB\-create\-single\-line\-staves\-as\-rythmic\fR
.IP
Create staves with a single line as rythmic staves.
By default, drum staves are created in this case.
.TP
Voices
(\fB\-hmsrv\fR, \fB\-help\-msr\-voices\fR):
.HP
\fB\-cvsrvn\fR, \fB\-create\-voices\-staff\-relative\-numbers\fR
.IP
Generate voices names with numbers relative to their staff.
By default, the voice numbers found are used,
which may be global to the score.
.TP
Repeats
(\fB\-hmsrr\fR, \fB\-help\-msr\-repeats\fR):
.HP
\fB\-ciirb\fR, \fB\-create\-implicit\-initial\-repeat\-barline\fR
.IP
Create an implicit repeat barline at the beginning of the stave
in case there is none, as is usual in scores.
By default, no such barline is added.
.TP
Notes
(\fB\-hmsrn\fR, \fB\-help\-msr\-notes\fR):
.HP
\fB\-dr\fR<SHORT_NAME>, \fB\-delay\-rests\fR<LONG_NAME>
.IP
Delay SHORT_NAME/LONG_NAME that occur on a rest until the next note.
The 7 known SHORT_NAMEs are:
.IP
dyns, words, beams, slurs, ligs, peds and wedges.
.IP
The 7 known LONG_NAMEs are:
.IP
\fB\-dynamics\fR, \fB\-words\fR, \fB\-beams\fR, \fB\-slurs\fR, \fB\-ligatures\fR, \fB\-pedals\fR and \fB\-wedges\fR.
.HP
\fB\-drslashes\fR, \fB\-delay\-rests\-slashes\fR
.IP
\&'<slash/>' in MusicXML
.HP
\fB\-oarts\fR, \fB\-omit\-articulations\fR
.IP
\&'<word/>' in MusicXML, '<!' in LilyPond
.HP
\fB\-oorns\fR, \fB\-omit\-ornaments\fR
.IP
\&'<trill\-mark/>' in MusicXML, '<!' in LilyPond
.HP
\fB\-owords\fR, \fB\-omit\-words\fR
.IP
\&'<word/>' in MusicXML, '<!' in LilyPond
.HP
\fB\-owedges\fR, \fB\-omit\-wedges\fR
.IP
\&'<wedge/>' in MusicXML, '<!' in LilyPond
.TP
Lyrics
(\fB\-hmsrlyrd\fR, \fB\-help\-msr\-lyrics\fR):
.HP
\fB\-asn\fR, \fB\-add\-stanzas\-numbers\fR
.IP
Add stanzas numbers to lyrics.
.HP
\fB\-ol\fR, \fB\-omit\-lyrics\fR
.IP
Don't create lyrics in the MSR.
.TP
Harmonies
(\fB\-hmsrh\fR, \fB\-help\-msr\-harmonies\fR):
.HP
\fB\-shv\fR, \fB\-show\-harmony\-voices\fR
.IP
Show the parts harmony voices in the MSR data
even though it does not contain music.
.HP
\fB\-oh\fR, \fB\-omit\-harmonies\fR
.IP
Don't create harmonies in the MSR.
.TP
Figured bass
(\fB\-hmsrfb\fR, \fB\-help\-msr\-figured\-bass\fR):
.HP
\fB\-sfbv\fR, \fB\-show\-figured\-bass\-voices\fR
.IP
Show the figured bass harmony voices in the MSR data
even though they do not contain music.
.HP
\fB\-ofb\fR, \fB\-omit\-figured\-basses\fR
.IP
Don't create figured basses in the MSR.
.TP
Exit after some passes
(\fB\-hmexit\fR, \fB\-help\-msr\-exit\fR):
.HP
\fB\-e2a\fR, \fB\-exit\-2a\fR
.IP
Exit after pass 2a, i.e. after conversion
of the MusicXML tree to an MSR skeleton.
.HP
\fB\-e2b\fR, \fB\-exit\-2b\fR
.IP
Exit after pass 2b, i.e. after conversion
of the MusicXML tree to MSR.
.IP
LPSR (\fB\-hlpsr\fR, \fB\-help\-lpsr\fR):
.IP
These options control the way LPSR data is handled.
.HP
\fB\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\fR
.TP
Trace
(\fB\-hlpsrtrace\fR, \fB\-help\-lpsr\-trace\fR):
.HP
\fB\-tlpsr\fR, \fB\-trace\-lpsr\fR
.IP
Write a trace of the LPSR graphs visiting activity to standard error.
.HP
\fB\-tlpv\fR, \fB\-trace\-lilypond\-version\fR
.IP
Write a trace of the LilyPond version to standard error.
.HP
\fB\-tlpsrv\fR, \fB\-trace\-lpsr\-visitors\fR
.IP
Write a trace of the LPSR graphs visiting activity to standard error.
.HP
\fB\-tlpsrb\fR, \fB\-trace\-lpsr\-blocks\fR
.IP
Write a trace of the LPSR blocks to standard error.
.HP
\fB\-tsf\fR, \fB\-trace\-scheme\-functions\fR
.IP
Write a trace of the activity regarding Scheme functions to standard error.
.TP
Display
(\fB\-hlpsrd\fR, \fB\-help\-lpsr\-display\fR):
.HP
\fB\-dlpsr\fR, \fB\-display\-lpsr\fR
.IP
Write the contents of the LPSR data to standard error.
.TP
LilyPond score
output    (\fB\-hlpso\fR, \fB\-help\-lilypond\-score\-output\fR):
.HP
\fB\-lpv\fR, \fB\-lilypond\-version\fR STRING
.IP
Set the LilyPond '\eversion' to STRING in the LilyPond code.
The default is '2.19.83'.
.HP
\fB\-lpsok\fR, \fB\-lpsr\-score\-output\-kind\fR OUTPUT_KIND
.IP
Use OUTPUT_KIND to create the LPSR blocks,
as well as in the generated LilyPond code.
The 7 LilyPond output kinds available are:
.IP
parts\-and\-score, parts\-and\-score\-one\-file, parts\-only, parts\-only\-one\-file.
.IP
\&'\-one\-file' means that LilyPond will produce a single file containing all the scores and/or parts.
Otherwise, one file will be generated for each score and/or part.
The default is 'score\-only'.
.HP
\fB\-gss\fR, \fB\-global\-staff\-size\fR FLOAT
.IP
Set the LilyPond '#(set\-global\-staff\-size ...)' to FLOAT in the LilyPond code.
FLOAT should be a decimal number with at least one digit before the dot,
without any sign.
The default is '20.000000'.
.TP
Words
(\fB\-hlpsrwords\fR, \fB\-help\-lpsr\-words\fR):
.HP
\fB\-cwtt\fR, \fB\-convert\-words\-to\-tempo\fR
.IP
Convert words to tempo.
This may come in handy when MusicXML data has been obtained from scanned instrumental music images.
.HP
\fB\-awftl\fR, \fB\-add\-words\-from\-the\-lyrics\fR
.IP
Add words with the lyrics contents, keeping the latter untouched.
This may come in handy when MusicXML data has been obtained from scanned images.
.TP
Languages
(\fB\-hlpsrl\fR, \fB\-help\-lpsr\-languages\fR):
.HP
\fB\-lppl\fR, \fB\-lpsr\-pitches\-language\fR LANGUAGE
.IP
Use LANGUAGE to display note pitches in the LPSR logs and views,
as well as in the generated LilyPond code.
The 12 LilyPond pitches languages available are:
catalan, deutsch, english, espanol, francais, italiano, nederlands.
The default is 'nederlands'.
.HP
\fB\-lpcl\fR, \fB\-lpsr\-chords\-language\fR LANGUAGE
.IP
Use LANGUAGE to display chord names, their root and bass notes,
in the LPSR logs and views and the generated LilyPond code.
The 5 LilyPond pitches languages available are:
french, french, french, french, french, french, french, french, french.
\&'ignatzek' is Ignatzek's jazz\-like, english naming used by LilyPond by default.
The default is 'ignatzek'.
.TP
Transpose
(\fB\-hlpsrt\fR, \fB\-help\-lpsr\-transpose\fR):
.HP
\fB\-lpt\fR, \fB\-lpsr\-transpose\fR TRANSPOSITION
.IP
Use TRANSPOSITION to tranpose in the LPSR data,
thus as in the generated LilyPond code as well.
TRANSPOSITION should contain a diatonic pitch, followed if needed
by a sequence of ',' or '\e'' octave indications.
Such indications cannot be mixed.
For example, 'a', 'f' and 'bes,' can be used respectively
for instruments in 'a', 'f' and B flat respectively
.TP
Exit after some passes
(\fB\-hlexit\fR, \fB\-help\-lpsr\-exit\fR):
.HP
\fB\-e3\fR, \fB\-exit\-3\fR
.IP
Exit after pass 3, i.e. after conversion
of the MSR to LPSR.
.IP
LilyPond (\fB\-hlp\fR, \fB\-help\-lilypond\fR):
.IP
These lilypond control which LilyPond code is generated.
.HP
\fB\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\fR
.TP
Identification
(\fB\-hlpi\fR, \fB\-help\-lilypond\-identification\fR):
.IP
These options can be used to enforce values in the generated LilyPond code,
.IP
thus overriding the ones that may be present in the MSR data.
\fB\-HEADER_VARIABLE\fR STRING
.IP
Set variable HEADER_VARIABLE in the \eheader in the generated LilyPond code.
The 16 known HEADER_VARIABLEs are:
.IP
rights, composer, arranger, poet, lyricist, software, dedication.
.TP
Engravers
(\fB\-hlpe\fR, \fB\-help\-lilypond\-engravers\fR):
.HP
\fB\-ambitus\fR
.IP
Generate an ambitus range at the beginning of the staves/voices.
.TP
Clefs, keys, times
(\fB\-hckt\fR, \fB\-help\-clefs\-keys\-times\fR):
.HP
\fB\-ccc\fR, \fB\-comment\-clef\-changes\fR
.IP
Comment clef changes in the LilyPond code.
They won't show up in the score, but the information is not lost.
.HP
\fB\-numt\fR, \fB\-numerical\-time\fR
.IP
Generate numerical time signatures, such as '4/4' instead of 'C'.
.TP
Notes
(\fB\-hlpn\fR, \fB\-help\-lilypond\-notes\fR):
.HP
\fB\-abs\fR, \fB\-absolute\fR
.IP
Use absolute octave entry in the generated LilyPond code.
.HP
\fB\-rel\fR, \fB\-relative\fR PITCH_AND_OCTAVE
.IP
Use relative octave entry reference PITCH_AND_OCTAVE in the generated LilyPond code.
PITCH_AND_OCTAVE is made of a diatonic pitch and an optional sequence of commas or single quotes.
It should be placed between double quotes if it contains single quotes, such as:
.IP
\fB\-rel\fR "c''".
.IP
The default is to use LilyPond's implicit reference 'f'.
.HP
\fB\-fixed\fR PITCH_AND_OCTAVE
.IP
Use fixed octave entry reference PITCH_AND_OCTAVE in the generated LilyPond code.
PITCH_AND_OCTAVE is made of a diatonic pitch and an optional sequence of commas or single quotes.
It should be placed between double quotes if it contains single quotes, such as:
.IP
\fB\-fixed\fR "c''"
.HP
\fB\-alldurs\fR, \fB\-all\-durations\fR
.IP
Generate all LilyPond durations.
By default, a duration equal to preceding one found in the current voice
is omitted for code conciseness.
.HP
\fB\-stems\fR
.IP
Generate \estemUp and \estemDown LilyPond commands.
By default, LilyPond will take care of that by itself.
.HP
\fB\-noab\fR, \fB\-no\-auto\-beaming\fR
.IP
Generate '\eset Staff.autoBeaming = ##f' in each voice
to prevent LilyPond from handling beams automatically.
.HP
\fB\-nbeams\fR, \fB\-no\-beams\fR
.IP
Don't generate beams in the LilyPond code.
This is handy when the MusicXML data contains beam in vocal voices
.HP
\fB\-rsn\fR, \fB\-roman\-string\-numbers\fR
.IP
Generate '\eromanStringNumbers' in each voice
for LilyPond to generate roman instead of arabic string numbers.
.HP
\fB\-aos\fR, \fB\-avoid\-open\-strings\fR
.IP
Generate '\eset TabStaff.restrainOpenStrings = ##t' in each voice
to prevent LilyPond from using open strings.
.HP
\fB\-as\fR, \fB\-accidental\-style\fR STYLE
.IP
The 18 LilyPond accidental styles available are:
default, dodecaphonic, dodecaphonic\-first, dodecaphonic\-no\-repeat.
The default is 'default'.
.HP
\fB\-cfmr\fR, \fB\-compress\-full\-measure\-rests\fR
.IP
Compress full measure rests instead of generating successive empty measures.
.HP
\fB\-iln\fR, \fB\-input\-line\-numbers\fR
.IP
Generate after each note and barline a comment containing
its MusicXML input line number.
This is useful when debugging xml2ly.
.HP
\fB\-omn\fR, \fB\-original\-measure\-numbers\fR
.IP
Generate after each end of measure a comment containing
its original MusicXML measure number.
This is useful for adding line breaks and page breaks, and when debugging xml2ly.
.HP
\fB\-pim\fR, \fB\-positions\-in\-measures\fR
.IP
Generate after each note and barline a comment containing
its position in the measure.
This is useful when debugging xml2ly.
.TP
Bar numbers
(\fB\-hlpbn\fR, \fB\-help\-lilypond\-bars\-numbers\fR):
.HP
\fB\-abn\fR, \fB\-all\-bar\-numbers\fR
.IP
Generate LilyPond code to show all bar numbers.
.HP
\fB\-amn\fR, \fB\-all\-measure\-numbers\fR
.IP
Generate LilyPond code to show all measure numbers.
This option is a synonym to '\-abn, \fB\-all\-bar\-numbers\fR'.
.HP
\fB\-rmn\fR, \fB\-reset\-measure\-number\fR RESET_NUMBER_SPEC
.IP
Generate a '\eset Score.currentBarNumber = #NEW' command
at the beginning of measure OLD in the LilyPond code.
RESET_NUMBER_SPEC can be:
\&'OLD = NEW'
or
"OLD = NEW" .
OLD is the MusicXML original measure number (a string), that can be generated
in the LilyPond code in '| % ...' comments with option '\-omn, \fB\-original\-measure\-numbers\fR'.
NEW is a LilyPond (integer) measure number.
This comes in handy when scanning several movements from a single PDF score,
in which case measure numbers are a single sequence.
There can be several occurrences of this option.
.TP
Line breaks
(\fB\-hlplb\fR, \fB\-help\-lilypond\-line\-breaks\fR):
.HP
\fB\-imlb\fR, \fB\-ignore\-musicxml\-line\-breaks\fR
.IP
Ignore the line breaks from the MusicXML input \- let LilyPond decide about them.
.HP
\fB\-blairm\fR, \fB\-break\-lines\-at\-incomplete\-right\-measures\fR
.IP
Generate a '\ebreak' command at the end of incomplete right measures
which is handy in popular folk dances and tunes.
.HP
\fB\-slenm\fR, \fB\-separator\-line\-every\-n\-measures\fR N
.IP
Generate an additional separator line for readability every N measures,
where N is a positive integer.
Nothing special is done by default.
.HP
\fB\-blamn\fR, \fB\-break\-line\-after\-measure\-number\fR NUMBER
.IP
Generate a '\ebreak' command after measure NUMBER in the LilyPond code.
NUMBER is a MusicXML measure number (a string), to be found in the latter.
This comes in handy when scanning several movements from a single PDF score.
There can be several occurrences of this option.
.TP
Page breaks
(\fB\-hlppb\fR, \fB\-help\-lilypond\-page\-breaks\fR):
.HP
\fB\-impb\fR, \fB\-ignore\-musixcml\-page\-breaks\fR
.IP
Ignore the page breaks from the MusicXML input \- let LilyPond decide about them.
.HP
\fB\-bpamn\fR, \fB\-break\-page\-after\-measure\-number\fR NUMBER
.IP
Generate a '\epageBreak' command after measure NUMBER in the LilyPond code.
NUMBER is a MusicXML measure number (a string), to be found in the latter.
This comes in handy when scanning several movements from a single PDF score.
There can be several occurrences of this option.
.TP
Staves
(\fB\-hlps\fR, \fB\-helpLilypondStaves\fR):
.HP
\fB\-mtab\fR, \fB\-modernTab\fR
.IP
Generate '\emoderntab' instead of the default '\etab'.
.HP
\fB\-tfn\fR, \fB\-tabFullNotation\fR
.IP
Generate '\etabFullNotation' to obtain more complete tab notation, including note stems.
.HP
\fB\-kss\fR, \fB\-keep\-staff\-size\fR
.IP
Use the staff size value found in the MusicXML data.
.HP
\fB\-llc\fR, \fB\-ledger\-lines\-color\fR RGB_COLOR
.IP
Use RGB_COLOR for the ledger lines.
RGB_COLOR should be of the form 'r,g,b',
with r, g and b being float numbers between 0.0 and 1.0 inclusive.
.TP
Chords
(\fB\-hlpc\fR, \fB\-help\-lilypond\-chordss\fR):
.HP
\fB\-conarp\fR, \fB\-connect\-arpeggios\fR
.IP
Connect arpeggios across piano staves.
.TP
Tuplets
(\fB\-hlpt\fR, \fB\-help\-lilypond\-tuplets\fR):
.HP
\fB\-itups\fR, \fB\-indent\-tuplets\fR
.IP
Indent tuplets notes on a line of their own,
instead of keeping the on one and the same line.
.TP
Repeats
(\fB\-hlpr\fR, \fB\-help\-lilypond\-repeats\fR):
.HP
\fB\-krbs\fR, \fB\-keep\-repeat\-barlines\fR
.IP
Generate repeats start and and bar lines even though LilyPond would take care of them.
.HP
\fB\-rbracks\fR, \fB\-repeat\-brackets\fR
.IP
Generate repeats with brackets instead of regular bar lines.
.HP
\fB\-irn\fR, \fB\-ignore\-repeat\-numbers\fR
.IP
Ignore repeats numbers and let LilyPond determine them.
.TP
Ornaments
(\fB\-hlporns\fR, \fB\-help\-lilypond\-ornaments\fR):
.HP
\fB\-dof\fR, \fB\-delayed\-ornaments\-fraction\fR NUM/DENOM
.IP
Place the delayed turn/reverseturn at the given fraction
between the ornemented note and the next one.
The default is '1/2'.
.TP
Chords display
(\fB\-hchd\fR, \fB\-help\-chords\-display\fR):
.HP
\fB\-chd\fR, \fB\-chords\-display\fR SPECIFICATION
.IP
Use SPECIFICATION to display chords using LilyPond's chordNameExceptions.
SPECIFICATION should contain a chord contents such as '<c ees ges bes>',
followed by code to display it, for example:
.IP
\&'<c ees ges bes> \e\esuper {"\-7(" {\e\esmall\e\eraise #0.5 \e\eflat} "5)"}'.
.IP
The LilyPond code has to escape backslashed, thus use '\e\e' to obtain '\e'.
These two elements are passed over to LilyPond verbatim, without any check.
This option can be used any number of times.
.HP
\fB\-jchd\fR, \fB\-jazz\-chords\-display\fR
.IP
Display the chords using LilyPond's chordNameExceptions
and a set of standard specifications to display them, i.e.:
.IP
<c ees ges bes>1\-\emarkup { \esuper {"\-7(" {\esmall\eraise #0.5 \eflat} "5)"} }
<c e g bes>1\-\emarkup { \esuper "7" }
<c e gis bes>1\-\emarkup { \esuper {"7(" {\esmall\eraise #0.5 \esharp} "5)"} }
<c f g bes>1\-\emarkup { \esuper {"7(sus4)"} }
<c e g a d'>1\-\emarkup { \esuper "6/9" }
<c e g bes des'>1\-\emarkup { \esuper {"7(" {\esmall\eraise #0.5 \eflat} "9)"} }
<c f g bes d'>1\-\emarkup { \esuper {"9(sus4)"} }
<c e g bes d'>1\-\emarkup { \esuper "9" }
<c e g b d'>1\-\emarkup { \esuper "maj9" }
<c e gis bes d'>1\-\emarkup { \esuper "9+" }
<c e g bes d' fis'>1\-\emarkup { \esuper "9#11" }
<c e g bes d' f'>1\-\emarkup { \esuper "11" }
<c e g bes d' a'>1\-\emarkup { \esuper "13" }
<c e g bes d' fis' a'>1\-\emarkup { \esuper {"13(" {\esmall\eraise #0.5 \esharp} "11)"} }
<c e g a d'>1\-\emarkup { \esuper "6(add9)" }
.TP
Lyrics
(\fB\-hlyrics\fR, \fB\-help\-lyrics\fR):
.HP
\fB\-la\fR, \fB\-lyrics\-alignment\fR STYLE
.IP
The 2 LilyPond lyrics alignment STYLEs available are:
automatic and manual.
The default is 'automatic'.
.TP
Fonts
(\fB\-hfonts\fR, \fB\-help\-fonts\fR):
.HP
\fB\-jazz\fR, \fB\-jazz\-fonts\fR
.IP
Use the LilyJazz font for notes, braces, text and chords.
It can be downloaded from https://github.com/OpenLilyPondFonts/lilyjazz.
This font should be installed so that LilyPond can use it, see:
https://github.com/OpenLilyPondFonts/lilyjazz/blob/master/LilyPond\-Fonts\-Installation\-And\-Usage.txt.
.TP
Code generation
(\fB\-hlpcg\fR, \fB\-help\-lilypond\-code\-generation\fR):
.HP
\fB\-xi\fR, \fB\-xml2ly\-infos\fR
.IP
Generate initial comments showing the compilation date and lilypond.
.HP
\fB\-com\fR, \fB\-comments\fR
.IP
Generate comments showing the structure of the score
such as '% part P_POne (P1).
.HP
\fB\-global\fR
.IP
Generate a 'global' empty variable and place a use of it
at the beginning of all voices.
.HP
\fB\-dm\fR, \fB\-display\-music\fR
.IP
Place the contents of all voices inside a '\edisplayMusic' block,
for LilyPond to show its internal representation of the music.
.HP
\fB\-nolpc\fR, \fB\-no\-lilypond\-code\fR
.IP
Don't generate any LilyPond code.
That can be useful if only a summary of the score is needed.
.HP
\fB\-nolpl\fR, \fB\-no\-lilypond\-lyrics\fR
.IP
Don't generate any lyrics in the LilyPond code.
.HP
\fB\-lpcd\fR, \fB\-lilypond\-compile\-date\fR
.IP
Generate code to include the compilation date
when LilyPond creates the score.
.HP
\fB\-paco\fR, \fB\-point\-and\-clic\-off\fR
.IP
Generate \epointAndClickOff at the beginning of the LilyPond code
to reduce the size of the resulting PDF file.
.HP
\fB\-wnh\fR, \fB\-white\-note\-heads\fR
.IP
Generate Scheme function 'whiteNoteHeads'
at the beginning of the LilyPond code.
.TP
Score notation
(\fB\-hlpsn\fR, \fB\-help\-lilypond\-score\-notation\fR):
.HP
\fB\-jianpu\fR
.IP
Generate the score using jianpu (numbered) notation
instead of the default western notation.
That option needs lilypond\-Jianpu to be accessible to LilyPond
(https://github.com/nybbs2003/lilypond\-Jianpu/jianpu10a.ly).
.TP
Midi
(\fB\-hlpm\fR, \fB\-help\-lilypond\-midi\fR):
.HP
\fB\-mtempo\fR, \fB\-midi\-temp\fR MIDI_TEMPO_SPEC
.IP
Generate a '\etempo' command in the \emidi block.
MIDI_TEMPO_SPEC can be:
\&'DURATION = PER_SECOND'
or
"DURATION = PER_SECOND" .
DURATION is a string such as '8.', and PER_SECOND is an integer.
The single or double quotes are used to allow spaces around the '=' sign,
otherwise they can be dispensed with.
Using double quotes allows for shell variables substitutions, as in:
PER_SECOND=66
xml2ly \fB\-midiTempo\fR "8. ${PER_SECOND}" .
The default is '4 = 90'.
.HP
\fB\-no\-midi\fR
.IP
Generate the '\emidi' block as a comment instead of active code.
.IP
Extra (\fB\-he\fR, \fB\-help\-extra\fR):
.IP
These extra provide features not related to translation from MusicXML to other formats.
In the text below:
.IP
\- ROOT_DIATONIC_PITCH should belong to the names available in
.IP
the selected MSR pitches language, "nederlands" by default;
.IP
\- other languages can be chosen with the '\-mpl, \fB\-msrPitchesLanguage\fR' option;
\- HARMONY_NAME should be one of:
.IP
MusicXML chords:
.IP
"maj", "min", "aug", "dim", "dom",
"maj7", "min7", "dim7", "aug7", "halfdim", "minmaj7",
"maj6", "min6", "dom9", "maj9", "min9", "dom11", "maj11", "min11",
"dom13", "maj13", "min13", "sus2", "sus4",
"neapolitan", "italian", "french", "german"
.IP
Jazz\-specific chords:
.IP
"pedal", "power", "tristan", "minmaj9", "domsus4", "domaug5",
"dommin9", "domaug9dim5", "domaug9aug5", "domaug11", "maj7aug11"
.IP
The single or double quotes are used to allow spaces in the names
and around the '=' sign, otherwise they can be dispensed with.
.HP
\fB\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\fR
.TP
Chords structures
(\fB\-hecs\fR, \fB\-help\-extra\-chord\-structures\fR):
.HP
\fB\-scs\fR, \fB\-show\-chords\-structures\fR
.IP
Write all known chords structures to standard output.
.TP
Chords contents
(\fB\-hecc\fR, \fB\-help\-extra\-chords\-contents\fR):
.HP
\fB\-sacc\fR, \fB\-show\-all\-chords\-contents\fR PITCH
.IP
Write all chords contents for the given diatonic (semitones) PITCH,
supplied in the current language to standard output.
.TP
Chord details
(\fB\-hecd\fR, \fB\-help\-extra\-chords\-details\fR):
.HP
\fB\-scd\fR, \fB\-show\-chord\-details\fR CHORD_SPEC
.IP
Write the details of the chord for the given diatonic (semitones) pitch
in the current language and the given harmony to standard output.
CHORD_SPEC can be:
\&'ROOT_DIATONIC_PITCH HARMONY_NAME'
or
"ROOT_DIATONIC_PITCH = HARMONY_NAME"
Using double quotes allows for shell variables substitutions, as in:
HARMONY="maj7"
xml2ly \fB\-show\-chord\-details\fR "bes ${HARMONY}"
.TP
Chord analysis
(\fB\-heca\fR, \fB\-help\-extra\-chords\-analysis\fR):
.HP
\fB\-sca\fR, \fB\-show\-chord\-analysis\fR CHORD_SPEC
.IP
Write an analysis of the chord for the given diatonic (semitones) pitch
in the current language and the given harmony to standard output.
CHORD_SPEC can be:
\&'ROOT_DIATONIC_PITCH HARMONY_NAME INVERSION'
or
"ROOT_DIATONIC_PITCH = HARMONY_NAME INVERSION"
Using double quotes allows for shell variables substitutions, as in:
HARMONY="maj7"
INVERSION=2
xml2ly \fB\-show\-chord\-analysis\fR "bes ${HARMONY} ${INVERSION}"
.IP
Man page (\fB\-hmp\fR, \fB\-help\-man\-page\fR):
.IP
These options control the way the man page is generated.
.HP
\fB\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\fR
.TP
Display
(\fB\-hmpd\fR, \fB\-help\-man\-page\-display\fR):
.HP
\fB\-gmp\fR, \fB\-generate\-man\-page\fR
.IP
Write man page data to standard output.
.TP
Trace
(\fB\-hmpt\fR, \fB\-help\-man\-page\-trace\fR):
.IP
Note: the options in this group imply '\-tmp, \fB\-trace\-man\-page\fR'.
.PP
This is xml2ly version 0.91
.SS "Versions history:"
.TP
0.91
(October 2018):
.IP
First draft version
.IP
Initial (early 2016):
.IP
Start as xml2lilypond, a clone of xml2guido
.SH "SEE ALSO"
The full documentation for
.B xml2ly
is maintained as a Texinfo manual.  If the
.B info
and
.B xml2ly
programs are properly installed at your site, the command
.IP
.B info xml2ly
.PP
should give you access to the complete manual.
